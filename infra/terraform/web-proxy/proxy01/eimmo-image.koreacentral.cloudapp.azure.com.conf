server {

    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.php index.html index.htm;

    server_name image-proxy.koreacentral.cloudapp.azure.com;

    error_log /var/log/nginx/tester-image.koreacentral.cloudapp.azure.com_error.log;
    access_log /var/log/nginx/tester-image.koreacentral.cloudapp.azure.com_access.log;

    client_max_body_size 100M;

    #location / {
    #    # First attempt to serve request as file, then
    #    # as directory, then fall back to displaying a 404.
    #    #try_files $uri $uri/ /index.php?$args;
    #}

    # "/[http | https]/[address ex-> naver.com/"
    location ~* /([hHtTpPsS]+)/([.a-zA-Z0-9-]+)/ {
        # options을 요청한 경우에 204반환
        if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 86400;
                return 204;
        }
        # 받은 인자에서 http[s]/address를 빼고 마지막 path만 전달 함
        rewrite /([hHtTpPsS]+)/([.a-zA-Z0-9-]+)/(.*)$ /$3 break;
        proxy_ssl_server_name on;
        # proxy_pass를 할 경우에 pass되는 타겟을 인식하지 못하는 경우 발생.
        # 아래의 resolver 추가하여 패스
        resolver 8.8.8.8;
        # $1 -> http or https, $2 -> address
        proxy_pass $1://$2;

        # cors 설정
        proxy_hide_header Access-Control-Allow-Origin;
        add_header 'Access-Control-Allow-Origin' '*' always;
        #add_header 'Access-Control-Allow-Credentials' 'true';
        #add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Content-Range,Range' always;
        add_header 'Access-Control-Allow-Headers' 'x-requested-with' always;
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
        add_header 'Access-Control-Max-Age' 86400 always;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/tester-image.koreacentral.cloudapp.azure.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tester-image.koreacentral.cloudapp.azure.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = tester-image.koreacentral.cloudapp.azure.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;

    server_name tester-image.koreacentral.cloudapp.azure.com;
    return 404; # managed by Certbot
}
